name: Build and Release AIHO App

on:
  push:
    branches:
      - main

jobs:
  generate-version:
    name: Generate Semantic Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version_tag: ${{ steps.version.outputs.version_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Semantic Version
        id: version
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(feat|feature)"
          version_format: "${major}.${minor}.${patch}"

  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    needs: generate-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: yarn install

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: yarn-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: yarn-${{ runner.os }}-

  build:
    name: Build Next.js App
    runs-on: ubuntu-latest
    needs: [install-dependencies, generate-version]
    strategy:
      matrix:
        network: [devnet, testnet, mainnet]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: yarn-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: yarn-${{ runner.os }}-

      - name: Build Next.js app for ${{ matrix.network }}
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_CDP_API_KEY: ${{ secrets.NEXT_PUBLIC_CDP_API_KEY }}
          NEXT_PUBLIC_WC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WC_PROJECT_ID }}
          NEXT_PUBLIC_ENVIRONMENT: "localhost"

      - name: Copy required assets
        run: |
          cp -r .next/static .next/standalone/.next/static
          cp -r public .next/standalone/public

      - name: Archive standalone build
        run: zip -r aiho-app-${{ matrix.network }}.zip .next/standalone

      - name: Upload Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: aiho-app-${{ matrix.network }}
          path: aiho-app-${{ matrix.network }}.zip

  release:
    name: Create Single GitHub Release
    runs-on: ubuntu-latest
    needs: [build, generate-version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds

      - name: List downloaded files
        run: ls -R builds

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.generate-version.outputs.version_tag }}
          name: v${{ needs.generate-version.outputs.version }}
          draft: false
          prerelease: false
          files: builds/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
